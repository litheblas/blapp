# Generated by Django 3.2.7 on 2022-01-22 12:55

import blapp.utils.db_fields
import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', blapp.utils.db_fields.PrimaryKeyUUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', blapp.utils.db_fields.NameField(max_length=256, verbose_name='first name')),
                ('last_name', blapp.utils.db_fields.NameField(max_length=256, verbose_name='last name')),
                ('nickname', blapp.utils.db_fields.NameField(blank=True, max_length=256, verbose_name='nickname')),
                ('student_id', models.CharField(blank=True, max_length=8, verbose_name='student id')),
                ('home_address', models.CharField(blank=True, max_length=63, verbose_name='home address')),
                ('postal_code', models.CharField(blank=True, max_length=15, verbose_name='postal code')),
                ('postal_region', models.CharField(blank=True, max_length=63, verbose_name='postal region')),
                ('country', models.CharField(blank=True, max_length=63, verbose_name='country')),
                ('phone_number', models.CharField(blank=True, max_length=31, verbose_name='phone number')),
                ('workplace', models.CharField(blank=True, max_length=63, verbose_name='workplace')),
                ('arbitrary_text', models.TextField(blank=True, verbose_name='arbitrary text')),
                ('organ_donor_until', models.DateField(blank=True, null=True, verbose_name='organ donor until')),
                ('organ_donor', models.BooleanField(default=False, verbose_name='organ donator')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('date_of_death', models.DateField(blank=True, null=True, verbose_name='date of death')),
                ('email', blapp.utils.db_fields.UniqueEmailField(blank=True, default=None, max_length=254, null=True, unique=True)),
                ('legacy_id', models.PositiveIntegerField(blank=True, null=True)),
                ('temp_tour18', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('first_name', 'last_name'),
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', blapp.utils.db_fields.PrimaryKeyUUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', blapp.utils.db_fields.NameField(max_length=256, verbose_name='name')),
                ('description', blapp.utils.db_fields.DescriptionField(blank=True, verbose_name='description')),
                ('membership', models.BooleanField(default=False)),
                ('engagement', models.BooleanField(default=False)),
                ('legacy_table', models.CharField(blank=True, max_length=64)),
                ('legacy_id', models.CharField(blank=True, max_length=64)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='people.role')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RoleAssignment',
            fields=[
                ('id', blapp.utils.db_fields.PrimaryKeyUUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', django.contrib.postgres.fields.ranges.DateRangeField(verbose_name='period')),
                ('trial', models.BooleanField()),
                ('legacy_table', models.CharField(blank=True, max_length=64)),
                ('legacy_start_id', models.CharField(blank=True, max_length=64)),
                ('legacy_end_id', models.CharField(blank=True, max_length=64)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_assignments', to='people.person', verbose_name='person')),
                ('role', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_assignments', to='people.role', verbose_name='role')),
            ],
            options={
                'ordering': ['period'],
            },
        ),
    ]
